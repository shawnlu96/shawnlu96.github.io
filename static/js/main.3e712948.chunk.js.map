{"version":3,"sources":["Submission.js","TOTP.js","App.js","reportWebVitals.js","index.js"],"names":["Submission","props","Form","useForm","form","cloudAPI","axios","create","baseURL","headers","onFinish","a","body","accountName","getFieldValue","secret","put","JSON","stringify","res","status","data","state","message","error","success","title","className","style","width","labelCol","span","wrapperCol","Item","label","name","rules","required","offset","type","htmlType","Search","Input","Paragraph","Typography","TOTP","prop","useState","code","setCode","onSearch","value","method","redirect","mode","credentials","get","payload","placeholder","allowClear","enterButton","size","copyable","App","justify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVAGaA,EAAa,SAACC,GACvB,MAAeC,IAAKC,UAAbC,EAAP,oBAEMC,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACL,8BAA+B,IAC/B,eAAgB,sBAIlBC,EAAQ,uCAAG,8BAAAC,EAAA,6DACTC,EAAO,CACPC,YAAaT,EAAKU,cAAc,eAEhCC,OAAQX,EAAKU,cAAc,WAJlB,SAQGT,EAASW,IAAI,WAAYC,KAAKC,UAAUN,IAR3C,OASK,OADdO,EARS,QASNC,QAAqC,MAAnBD,EAAIE,KAAKC,MAAeC,IAAQC,MAAM,gEAC1DD,IAAQE,QAAQ,kCAVR,2CAAH,qDAad,OAAQ,cAAC,IAAD,CAAMC,MAAO,uCAAUC,UAAW,OAAQC,MAAO,CAACC,MAAO,QAAzD,SACJ,eAAC,IAAD,CACIC,SAAU,CAACC,KAAO,GAClBC,WAAa,CAACD,KAAM,IACpB3B,KAAMA,EACNM,SAAUA,EAJd,UAMI,cAAC,IAAKuB,KAAN,CACIC,MAAM,eACNC,KAAK,cACLC,MAAO,CAAC,CAAEC,UAAU,EAAMd,QAAS,yCAHvC,SAKI,cAAC,IAAD,MASJ,cAAC,IAAKU,KAAN,CACIC,MAAM,kBACNC,KAAK,SACLC,MAAO,CAAC,CAAEC,UAAU,EAAMd,QAAS,2DAHvC,SAKI,cAAC,IAAD,MASJ,cAAC,IAAKU,KAAN,CAAWD,WAAa,CAACM,OAAQ,GAAjC,SACI,cAAC,IAAD,CAAQC,KAAK,UAAUC,SAAS,SAAhC,kC,SC1DRC,EAAWC,IAAXD,OACAE,EAAcC,IAAdD,UACKE,EAAO,SAAAC,GAChB,IAAMzC,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACL,8BAA+B,OAIvC,EAAuBsC,mBAAS,UAAhC,mBAAMC,EAAN,KAAYC,EAAZ,KACMC,EAAQ,uCAAG,WAAOC,GAAP,eAAAxC,EAAA,4DACO,CAChByC,OAAQ,MACRC,SAAU,SACXC,KAAM,UACNC,YAAY,eALF,SAQGlD,EAASmD,IAAI,iBAAkBL,GARlC,OASM,OADfhC,EARS,QASLC,QAAqC,MAAnBD,EAAIE,KAAKC,MAAeC,IAAQC,MAAM,gEAC3DyB,EAAQ9B,EAAIE,KAAKoC,QAAQT,MAVjB,2CAAH,sDAYd,OAAQ,eAAC,IAAD,CACAtB,MAAO,uCACPC,UAAW,OAFX,UAGA,cAACc,EAAD,CACIiB,YAAY,yDACZC,YAAU,EACVC,YAAY,eACZC,KAAK,QACLX,SAAUA,IAEd,qBAAKvB,UAAW,OAAhB,SACA,cAACgB,EAAD,CAAWmB,UAAQ,EAAnB,SAAqBd,UCdlBe,EAlBH,kBAMR,aALA,CAKA,OAAKpC,UAAW,YAAhB,SACI,eAAC,IAAD,CAAKqC,QAAQ,gBAAb,UACI,cAAC,IAAD,CAAKjC,KAAM,GAAX,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAKA,KAAM,GAAX,SACI,cAAC,EAAD,YCPDkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3e712948.chunk.js","sourcesContent":["import {Button, Card, Form, Input, message} from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nexport const Submission = (props) => {\r\n    const [form] = Form.useForm();\r\n\r\n    const cloudAPI = axios.create({\r\n        baseURL: 'http://47.243.120.6:5000',\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n\r\n    const onFinish = async () => {\r\n        let body = {\r\n            accountName: form.getFieldValue('accountName'),\r\n            // password: form.getFieldValue('password'),\r\n            secret: form.getFieldValue('secret'),\r\n            // mailPassword: form.getFieldValue('mailPassword')\r\n        }\r\n\r\n        let res = await cloudAPI.put('/account', JSON.stringify(body))\r\n        if(res.status !== 200 || res.data.state !== 200) message.error(\"出错了，请检查参数！\")\r\n        else message.success(\"提交成功！\")\r\n    }\r\n\r\n    return  <Card title={\"录入账户信息\"} className={\"card\"} style={{width: \"100%\"}} >\r\n        <Form\r\n            labelCol={{span : 5}}\r\n            wrapperCol= {{span: 18}}\r\n            form={form}\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                label=\"账户\"\r\n                name=\"accountName\"\r\n                rules={[{ required: true, message: '请输入账户名' }]}\r\n            >\r\n                <Input/>\r\n            </Form.Item>\r\n            {/*<Form.Item*/}\r\n            {/*    label=\"密码\"*/}\r\n            {/*    name=\"password\"*/}\r\n            {/*    rules={[{ required: true, message: '请输入账户密码' }]}*/}\r\n            {/*>*/}\r\n            {/*    <Input/>*/}\r\n            {/*</Form.Item>*/}\r\n            <Form.Item\r\n                label=\"2FA密钥\"\r\n                name=\"secret\"\r\n                rules={[{ required: true, message: '请输入二步验证密钥' }]}\r\n            >\r\n                <Input/>\r\n            </Form.Item>\r\n            {/*<Form.Item*/}\r\n            {/*    label=\"邮箱密码\"*/}\r\n            {/*    name=\"mailPassword\"*/}\r\n            {/*    rules={[{ required: true, message: '请输入邮箱密码' }]}*/}\r\n            {/*>*/}\r\n            {/*    <Input/>*/}\r\n            {/*</Form.Item>*/}\r\n            <Form.Item wrapperCol= {{offset: 5} }>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    提交\r\n                </Button>\r\n            </Form.Item>\r\n\r\n\r\n        </Form>\r\n    </Card>\r\n}","import {Card, Input, message, Typography} from \"antd\";\r\nimport {useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst { Search } = Input;\r\nconst { Paragraph } = Typography;\r\nexport const TOTP = prop => {\r\n    const cloudAPI = axios.create({\r\n        baseURL: 'http://47.243.120.6:5000',\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*'\r\n        }\r\n    })\r\n\r\n    const[code, setCode] = useState(\"******\");\r\n    const onSearch = async (value) => {\r\n       let requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow',\r\n           mode: 'no-cors',\r\n           credentials:'same-origin'\r\n        };\r\n\r\n        let res = await cloudAPI.get('/account?name='+ value)\r\n        if (res.status !== 200 || res.data.state !== 200) message.error(\"出错了，请检查参数！\")\r\n        else setCode(res.data.payload.code)\r\n    }\r\n    return (<Card\r\n            title={\"查询二步验证\"}\r\n            className={\"card\"}>\r\n            <Search\r\n                placeholder=\"输入需要查询的账号\"\r\n                allowClear\r\n                enterButton=\"查询\"\r\n                size=\"large\"\r\n                onSearch={onSearch}\r\n            />\r\n            <div className={\"code\"}>\r\n            <Paragraph copyable>{code}</Paragraph>\r\n            </div>\r\n        </Card>\r\n    )\r\n}","import React from 'react';\nimport {Button, Card, Col, Divider, Row, Form, Input} from 'antd';\nimport './App.css';\nimport {Submission} from \"./Submission\";\nimport {TOTP} from \"./TOTP\";\n\n\nconst App = () => (\n    // <Row gutter={[24, 16]}>\n    //     <Col span={12} style={{background: \"blue\", height :\"100vh\"}} >sad</Col>\n    //     <Col span={12} style={{background: \"red\", height :\"100vh\"}} >dasd</Col>\n    //\n    // </Row>\n    <div className={\"Container\"}>\n        <Row justify=\"space-between\">\n            <Col span={12}>\n                <Submission/>\n            </Col>\n            <Col span={12}>\n                <TOTP/>\n            </Col>\n        </Row>\n    </div>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}